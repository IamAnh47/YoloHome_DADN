{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuana\\\\University\\\\The_Third_Year\\\\HK242\\\\\\u0110\\u1ED3 \\xE1n \\u0111a ng\\xE0nh\\\\YoloHome_DADN\\\\YoloHome_DADN\\\\frontend\\\\src\\\\components\\\\DeviceControl\\\\DirectDeviceControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SystemController from '../../controllers/SystemController';\nimport DeviceController from '../../controllers/DeviceController';\nimport './DirectDeviceControl.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DirectDeviceControl = () => {\n  _s();\n  const [deviceStatus, setDeviceStatus] = useState({\n    fan: {\n      status: false\n    },\n    light: {\n      status: false\n    }\n  });\n  const [devices, setDevices] = useState([]);\n  const [feedback, setFeedback] = useState({\n    message: '',\n    type: ''\n  });\n  const [loading, setLoading] = useState({\n    fan: false,\n    light: false\n  });\n  const [error, setError] = useState(null);\n\n  // Load device status and registered devices when component mounts\n  useEffect(() => {\n    const loadDeviceStatus = async () => {\n      try {\n        const systemStatus = await SystemController.getSystemStatus();\n        setDeviceStatus(systemStatus.devices);\n      } catch (error) {\n        console.error('Error loading device status:', error);\n        showFeedback('Failed to load device status', 'error');\n      }\n    };\n    const loadDevices = async () => {\n      try {\n        const result = await DeviceController.getAllDevices();\n        setDevices(result);\n      } catch (err) {\n        setError('Failed to load devices. Please try again.');\n        console.error('Error loading devices:', err);\n      }\n    };\n    loadDeviceStatus();\n    loadDevices();\n\n    // Update device status every 5 seconds\n    const interval = setInterval(() => {\n      loadDeviceStatus();\n      loadDevices();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Show feedback and auto-hide after 3 seconds\n  const showFeedback = (message, type = 'success') => {\n    setFeedback({\n      message,\n      type\n    });\n    setTimeout(() => {\n      setFeedback({\n        message: '',\n        type: ''\n      });\n    }, 3000);\n  };\n\n  // Fan control\n  const handleFanControl = async action => {\n    setLoading(prev => ({\n      ...prev,\n      fan: true\n    }));\n    try {\n      const turnOn = action === 'on';\n      await SystemController.controlFan(turnOn);\n\n      // Update UI state immediately\n      setDeviceStatus(prev => ({\n        ...prev,\n        fan: {\n          ...prev.fan,\n          status: turnOn\n        }\n      }));\n      showFeedback(`Fan turned ${action} successfully`);\n    } catch (error) {\n      showFeedback(`Failed to control fan: ${error.message}`, 'error');\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        fan: false\n      }));\n    }\n  };\n\n  // Light control\n  const handleLightControl = async action => {\n    setLoading(prev => ({\n      ...prev,\n      light: true\n    }));\n    try {\n      const turnOn = action === 'on';\n      await SystemController.controlLight(turnOn);\n\n      // Update UI state immediately\n      setDeviceStatus(prev => ({\n        ...prev,\n        light: {\n          ...prev.light,\n          status: turnOn\n        }\n      }));\n      showFeedback(`Light turned ${action} successfully`);\n    } catch (error) {\n      showFeedback(`Failed to control light: ${error.message}`, 'error');\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        light: false\n      }));\n    }\n  };\n  const handleToggleDevice = async deviceId => {\n    try {\n      const deviceIndex = devices.findIndex(d => d.id === deviceId);\n      if (deviceIndex === -1) return;\n      const device = devices[deviceIndex];\n      const newStatus = device.status === 'active' ? 'inactive' : 'active';\n\n      // Update UI immediately for better user experience\n      const updatedDevices = [...devices];\n      updatedDevices[deviceIndex] = {\n        ...device,\n        status: newStatus,\n        lastUpdated: new Date().toISOString()\n      };\n      setDevices(updatedDevices);\n\n      // Call API to update device status\n      await DeviceController.updateDeviceStatus(deviceId, newStatus);\n    } catch (err) {\n      setError('Failed to control device. Please try again.');\n      console.error('Error controlling device:', err);\n    }\n  };\n  const deviceTypeIcons = {\n    light: 'fas fa-lightbulb',\n    fan: 'fas fa-fan',\n    lock: 'fas fa-lock',\n    alarm: 'fas fa-bell'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"direct-device-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart Control Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), feedback.message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `feedback-message ${feedback.type}`,\n      children: feedback.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `device-icon ${deviceStatus.fan.status ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-fan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Fan Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator\",\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: deviceStatus.fan.status ? 'status-on' : 'status-off',\n            children: deviceStatus.fan.status ? 'ON' : 'OFF'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-button on ${deviceStatus.fan.status ? 'active' : ''}`,\n            onClick: () => handleFanControl('on'),\n            disabled: loading.fan || deviceStatus.fan.status,\n            children: loading.fan ? 'Processing...' : 'Turn On'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-button off ${!deviceStatus.fan.status ? 'active' : ''}`,\n            onClick: () => handleFanControl('off'),\n            disabled: loading.fan || !deviceStatus.fan.status,\n            children: loading.fan ? 'Processing...' : 'Turn Off'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `device-icon ${deviceStatus.light.status ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-lightbulb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Light Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator\",\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: deviceStatus.light.status ? 'status-on' : 'status-off',\n            children: deviceStatus.light.status ? 'ON' : 'OFF'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-button on ${deviceStatus.light.status ? 'active' : ''}`,\n            onClick: () => handleLightControl('on'),\n            disabled: loading.light || deviceStatus.light.status,\n            children: loading.light ? 'Processing...' : 'Turn On'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-button off ${!deviceStatus.light.status ? 'active' : ''}`,\n            onClick: () => handleLightControl('off'),\n            disabled: loading.light || !deviceStatus.light.status,\n            children: loading.light ? 'Processing...' : 'Turn Off'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registered-devices\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registered Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-grid\",\n        children: devices.length > 0 ? devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"device-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"device-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"device-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: deviceTypeIcons[device.type] || 'fas fa-plug'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"device-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: device.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: device.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"device-status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: device.status,\n                children: device.status === 'active' ? 'ON' : 'OFF'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"device-control-panel\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"toggle-switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: device.status === 'active',\n                onChange: () => handleToggleDevice(device.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"toggle-slider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)]\n        }, device.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-devices\",\n          children: \"No devices found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(DirectDeviceControl, \"pcXJuIgCTDO4jwEh/cjJPluz/ww=\");\n_c = DirectDeviceControl;\nexport default DirectDeviceControl;\nvar _c;\n$RefreshReg$(_c, \"DirectDeviceControl\");","map":{"version":3,"names":["React","useState","useEffect","SystemController","DeviceController","jsxDEV","_jsxDEV","DirectDeviceControl","_s","deviceStatus","setDeviceStatus","fan","status","light","devices","setDevices","feedback","setFeedback","message","type","loading","setLoading","error","setError","loadDeviceStatus","systemStatus","getSystemStatus","console","showFeedback","loadDevices","result","getAllDevices","err","interval","setInterval","clearInterval","setTimeout","handleFanControl","action","prev","turnOn","controlFan","handleLightControl","controlLight","handleToggleDevice","deviceId","deviceIndex","findIndex","d","id","device","newStatus","updatedDevices","lastUpdated","Date","toISOString","updateDeviceStatus","deviceTypeIcons","lock","alarm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","map","name","location","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/tuana/University/The_Third_Year/HK242/Đồ án đa ngành/YoloHome_DADN/YoloHome_DADN/frontend/src/components/DeviceControl/DirectDeviceControl.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SystemController from '../../controllers/SystemController';\r\nimport DeviceController from '../../controllers/DeviceController';\r\nimport './DirectDeviceControl.css';\r\n\r\nconst DirectDeviceControl = () => {\r\n  const [deviceStatus, setDeviceStatus] = useState({\r\n    fan: { status: false },\r\n    light: { status: false }\r\n  });\r\n  const [devices, setDevices] = useState([]);\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [loading, setLoading] = useState({\r\n    fan: false,\r\n    light: false\r\n  });\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load device status and registered devices when component mounts\r\n  useEffect(() => {\r\n    const loadDeviceStatus = async () => {\r\n      try {\r\n        const systemStatus = await SystemController.getSystemStatus();\r\n        setDeviceStatus(systemStatus.devices);\r\n      } catch (error) {\r\n        console.error('Error loading device status:', error);\r\n        showFeedback('Failed to load device status', 'error');\r\n      }\r\n    };\r\n    \r\n    const loadDevices = async () => {\r\n      try {\r\n        const result = await DeviceController.getAllDevices();\r\n        setDevices(result);\r\n      } catch (err) {\r\n        setError('Failed to load devices. Please try again.');\r\n        console.error('Error loading devices:', err);\r\n      }\r\n    };\r\n    \r\n    loadDeviceStatus();\r\n    loadDevices();\r\n    \r\n    // Update device status every 5 seconds\r\n    const interval = setInterval(() => {\r\n      loadDeviceStatus();\r\n      loadDevices();\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Show feedback and auto-hide after 3 seconds\r\n  const showFeedback = (message, type = 'success') => {\r\n    setFeedback({ message, type });\r\n    setTimeout(() => {\r\n      setFeedback({ message: '', type: '' });\r\n    }, 3000);\r\n  };\r\n\r\n  // Fan control\r\n  const handleFanControl = async (action) => {\r\n    setLoading(prev => ({ ...prev, fan: true }));\r\n    try {\r\n      const turnOn = action === 'on';\r\n      await SystemController.controlFan(turnOn);\r\n      \r\n      // Update UI state immediately\r\n      setDeviceStatus(prev => ({\r\n        ...prev,\r\n        fan: {\r\n          ...prev.fan,\r\n          status: turnOn\r\n        }\r\n      }));\r\n      \r\n      showFeedback(`Fan turned ${action} successfully`);\r\n    } catch (error) {\r\n      showFeedback(`Failed to control fan: ${error.message}`, 'error');\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, fan: false }));\r\n    }\r\n  };\r\n\r\n  // Light control\r\n  const handleLightControl = async (action) => {\r\n    setLoading(prev => ({ ...prev, light: true }));\r\n    try {\r\n      const turnOn = action === 'on';\r\n      await SystemController.controlLight(turnOn);\r\n      \r\n      // Update UI state immediately\r\n      setDeviceStatus(prev => ({\r\n        ...prev,\r\n        light: {\r\n          ...prev.light, \r\n          status: turnOn\r\n        }\r\n      }));\r\n      \r\n      showFeedback(`Light turned ${action} successfully`);\r\n    } catch (error) {\r\n      showFeedback(`Failed to control light: ${error.message}`, 'error');\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, light: false }));\r\n    }\r\n  };\r\n\r\n  const handleToggleDevice = async (deviceId) => {\r\n    try {\r\n      const deviceIndex = devices.findIndex(d => d.id === deviceId);\r\n      if (deviceIndex === -1) return;\r\n      \r\n      const device = devices[deviceIndex];\r\n      const newStatus = device.status === 'active' ? 'inactive' : 'active';\r\n      \r\n      // Update UI immediately for better user experience\r\n      const updatedDevices = [...devices];\r\n      updatedDevices[deviceIndex] = { \r\n        ...device, \r\n        status: newStatus,\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n      setDevices(updatedDevices);\r\n      \r\n      // Call API to update device status\r\n      await DeviceController.updateDeviceStatus(deviceId, newStatus);\r\n    } catch (err) {\r\n      setError('Failed to control device. Please try again.');\r\n      console.error('Error controlling device:', err);\r\n    }\r\n  };\r\n\r\n  const deviceTypeIcons = {\r\n    light: 'fas fa-lightbulb',\r\n    fan: 'fas fa-fan',\r\n    lock: 'fas fa-lock',\r\n    alarm: 'fas fa-bell'\r\n  };\r\n\r\n  return (\r\n    <div className=\"direct-device-control\">\r\n      <h2>Smart Control Panel</h2>\r\n      \r\n      {feedback.message && (\r\n        <div className={`feedback-message ${feedback.type}`}>\r\n          {feedback.message}\r\n        </div>\r\n      )}\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      <div className=\"control-cards\">\r\n        {/* Fan Control Card */}\r\n        <div className=\"control-card\">\r\n          <div className={`device-icon ${deviceStatus.fan.status ? 'active' : ''}`}>\r\n            <i className=\"fas fa-fan\"></i>\r\n          </div>\r\n          <h3>Fan Control</h3>\r\n          <div className=\"status-indicator\">\r\n            Status: <span className={deviceStatus.fan.status ? 'status-on' : 'status-off'}>\r\n              {deviceStatus.fan.status ? 'ON' : 'OFF'}\r\n            </span>\r\n          </div>\r\n          <div className=\"control-buttons\">\r\n            <button \r\n              className={`control-button on ${deviceStatus.fan.status ? 'active' : ''}`}\r\n              onClick={() => handleFanControl('on')}\r\n              disabled={loading.fan || deviceStatus.fan.status}\r\n            >\r\n              {loading.fan ? 'Processing...' : 'Turn On'}\r\n            </button>\r\n            <button \r\n              className={`control-button off ${!deviceStatus.fan.status ? 'active' : ''}`}\r\n              onClick={() => handleFanControl('off')}\r\n              disabled={loading.fan || !deviceStatus.fan.status}\r\n            >\r\n              {loading.fan ? 'Processing...' : 'Turn Off'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Light Control Card */}\r\n        <div className=\"control-card\">\r\n          <div className={`device-icon ${deviceStatus.light.status ? 'active' : ''}`}>\r\n            <i className=\"fas fa-lightbulb\"></i>\r\n          </div>\r\n          <h3>Light Control</h3>\r\n          <div className=\"status-indicator\">\r\n            Status: <span className={deviceStatus.light.status ? 'status-on' : 'status-off'}>\r\n              {deviceStatus.light.status ? 'ON' : 'OFF'}\r\n            </span>\r\n          </div>\r\n          <div className=\"control-buttons\">\r\n            <button \r\n              className={`control-button on ${deviceStatus.light.status ? 'active' : ''}`}\r\n              onClick={() => handleLightControl('on')}\r\n              disabled={loading.light || deviceStatus.light.status}\r\n            >\r\n              {loading.light ? 'Processing...' : 'Turn On'}\r\n            </button>\r\n            <button \r\n              className={`control-button off ${!deviceStatus.light.status ? 'active' : ''}`}\r\n              onClick={() => handleLightControl('off')}\r\n              disabled={loading.light || !deviceStatus.light.status}\r\n            >\r\n              {loading.light ? 'Processing...' : 'Turn Off'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Registered Devices */}\r\n      <div className=\"registered-devices\">\r\n        <h3>Registered Devices</h3>\r\n        <div className=\"device-grid\">\r\n          {devices.length > 0 ? (\r\n            devices.map(device => (\r\n              <div key={device.id} className=\"device-card\">\r\n                <div className=\"device-header\">\r\n                  <div className=\"device-icon\">\r\n                    <i className={deviceTypeIcons[device.type] || 'fas fa-plug'}></i>\r\n                  </div>\r\n                  <div className=\"device-info\">\r\n                    <h3>{device.name}</h3>\r\n                    <p>{device.location}</p>\r\n                  </div>\r\n                  <div className=\"device-status\">\r\n                    <span className={device.status}>{device.status === 'active' ? 'ON' : 'OFF'}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"device-control-panel\">\r\n                  <label className=\"toggle-switch\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={device.status === 'active'}\r\n                      onChange={() => handleToggleDevice(device.id)}\r\n                    />\r\n                    <span className=\"toggle-slider\"></span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"no-devices\">No devices found.</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectDeviceControl; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}