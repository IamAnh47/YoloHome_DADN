{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuana\\\\University\\\\The_Third_Year\\\\HK242\\\\\\u0110\\u1ED3 \\xE1n \\u0111a ng\\xE0nh\\\\YoloHome_DADN\\\\YoloHome_DADN\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\SensorChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport SensorController from '../../controllers/SensorController';\nimport './SensorChart.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SensorChart = ({\n  sensorType,\n  title,\n  unit\n}) => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [timeRange, setTimeRange] = useState('day');\n  const [isLoading, setIsLoading] = useState(true);\n  const loadChartData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const data = await SensorController.getSensorHistory(sensorType, timeRange);\n      setChartData(data);\n    } catch (error) {\n      console.error(`Error loading ${sensorType} chart data:`, error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [sensorType, timeRange]);\n  useEffect(() => {\n    loadChartData();\n  }, [sensorType, timeRange, loadChartData]);\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return timeRange === 'day' ? date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    }) : date.toLocaleDateString();\n  };\n\n  // Find min and max values for the chart scale\n  const values = chartData.map(item => item.value);\n  const minValue = Math.floor(Math.min(...(values.length ? values : [0])));\n  const maxValue = Math.ceil(Math.max(...(values.length ? values : [100])));\n\n  // Calculate chart bar heights\n  const getBarHeight = value => {\n    const range = maxValue - minValue;\n    return range === 0 ? 50 : (value - minValue) / range * 100;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-loading\",\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: timeRange === 'day' ? 'active' : '',\n          onClick: () => setTimeRange('day'),\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: timeRange === 'week' ? 'active' : '',\n          onClick: () => setTimeRange('week'),\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: chartData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-y-axis\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [maxValue, unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [Math.floor((maxValue + minValue) / 2), unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [minValue, unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-bars\",\n          children: chartData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-bar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-bar\",\n              style: {\n                height: `${getBarHeight(item.value)}%`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bar-value\",\n                children: [item.value, unit]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-label\",\n              children: formatTime(item.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-message\",\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorChart, \"Q3bOUCiGyI3VNvET7mDVVUd20oQ=\");\n_c = SensorChart;\nexport default SensorChart;\nvar _c;\n$RefreshReg$(_c, \"SensorChart\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","SensorController","jsxDEV","_jsxDEV","Fragment","_Fragment","SensorChart","sensorType","title","unit","_s","chartData","setChartData","timeRange","setTimeRange","isLoading","setIsLoading","loadChartData","data","getSensorHistory","error","console","formatTime","timestamp","date","Date","toLocaleTimeString","hour","minute","toLocaleDateString","values","map","item","value","minValue","Math","floor","min","length","maxValue","ceil","max","getBarHeight","range","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","style","height","_c","$RefreshReg$"],"sources":["C:/Users/tuana/University/The_Third_Year/HK242/Đồ án đa ngành/YoloHome_DADN/YoloHome_DADN/frontend/src/components/Dashboard/SensorChart.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport SensorController from '../../controllers/SensorController';\r\nimport './SensorChart.css';\r\n\r\nconst SensorChart = ({ sensorType, title, unit }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [timeRange, setTimeRange] = useState('day');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  const loadChartData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const data = await SensorController.getSensorHistory(sensorType, timeRange);\r\n      setChartData(data);\r\n    } catch (error) {\r\n      console.error(`Error loading ${sensorType} chart data:`, error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [sensorType, timeRange]);\r\n  \r\n  useEffect(() => {\r\n    loadChartData();\r\n  }, [sensorType, timeRange, loadChartData]);\r\n  \r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return timeRange === 'day' \r\n      ? date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n      : date.toLocaleDateString();\r\n  };\r\n  \r\n  // Find min and max values for the chart scale\r\n  const values = chartData.map(item => item.value);\r\n  const minValue = Math.floor(Math.min(...(values.length ? values : [0])));\r\n  const maxValue = Math.ceil(Math.max(...(values.length ? values : [100])));\r\n  \r\n  // Calculate chart bar heights\r\n  const getBarHeight = (value) => {\r\n    const range = maxValue - minValue;\r\n    return range === 0 ? 50 : ((value - minValue) / range * 100);\r\n  };\r\n  \r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"sensor-chart\">\r\n        <div className=\"chart-header\">\r\n          <h3>{title}</h3>\r\n        </div>\r\n        <div className=\"chart-loading\">Loading data...</div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"sensor-chart\">\r\n      <div className=\"chart-header\">\r\n        <h3>{title}</h3>\r\n        <div className=\"chart-controls\">\r\n          <button \r\n            className={timeRange === 'day' ? 'active' : ''} \r\n            onClick={() => setTimeRange('day')}\r\n          >\r\n            Day\r\n          </button>\r\n          <button \r\n            className={timeRange === 'week' ? 'active' : ''} \r\n            onClick={() => setTimeRange('week')}\r\n          >\r\n            Week\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"chart-container\">\r\n        {chartData.length > 0 ? (\r\n          <>\r\n            <div className=\"chart-y-axis\">\r\n              <span>{maxValue}{unit}</span>\r\n              <span>{Math.floor((maxValue + minValue) / 2)}{unit}</span>\r\n              <span>{minValue}{unit}</span>\r\n            </div>\r\n            \r\n            <div className=\"chart-bars\">\r\n              {chartData.map((item, index) => (\r\n                <div key={index} className=\"chart-bar-container\">\r\n                  <div \r\n                    className=\"chart-bar\"\r\n                    style={{ height: `${getBarHeight(item.value)}%` }}\r\n                  >\r\n                    <span className=\"bar-value\">{item.value}{unit}</span>\r\n                  </div>\r\n                  <div className=\"bar-label\">{formatTime(item.timestamp)}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"no-data-message\">No data available</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SensorChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}